using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using PureCloudPlatform.Client.V2.Client;

namespace PureCloudPlatform.Client.V2.Model
{
    /// <summary>
    /// SpeechTextAnalyticsConversationSummary
    /// </summary>
    [DataContract]
    public partial class SpeechTextAnalyticsConversationSummary :  IEquatable<SpeechTextAnalyticsConversationSummary>
    {
        /// <summary>
        /// The type of summary
        /// </summary>
        /// <value>The type of summary</value>
        [JsonConverter(typeof(UpgradeSdkEnumConverter))]
        public enum SummaryTypeEnum
        {
            /// <summary>
            /// Your SDK version is out of date and an unknown enum value was encountered. 
            /// Please upgrade the SDK using the command "Upgrade-Package PureCloudApiSdk" 
            /// in the Package Manager Console
            /// </summary>
            [EnumMember(Value = "OUTDATED_SDK_VERSION")]
            OutdatedSdkVersion,
            
            /// <summary>
            /// Enum Conversation for "Conversation"
            /// </summary>
            [EnumMember(Value = "Conversation")]
            Conversation,
            
            /// <summary>
            /// Enum Agent for "Agent"
            /// </summary>
            [EnumMember(Value = "Agent")]
            Agent
        }
        /// <summary>
        /// The type of summary
        /// </summary>
        /// <value>The type of summary</value>
        [DataMember(Name="summaryType", EmitDefaultValue=false)]
        public SummaryTypeEnum? SummaryType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SpeechTextAnalyticsConversationSummary" /> class.
        /// </summary>
        /// <param name="SummaryType">The type of summary.</param>
        /// <param name="Language">Language of the summary.</param>
        /// <param name="AgentId">The id of the agent associated with the summary.</param>
        /// <param name="Summary">A summarization of the conversation transcription.</param>
        /// <param name="Generated">Indicates whether or not the summary was generated by AI.</param>
        /// <param name="DateCreated">Timestamp of when the summary was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z.</param>
        public SpeechTextAnalyticsConversationSummary(SummaryTypeEnum? SummaryType = null, string Language = null, string AgentId = null, string Summary = null, bool? Generated = null, DateTime? DateCreated = null)
        {
            this.SummaryType = SummaryType;
            this.Language = Language;
            this.AgentId = AgentId;
            this.Summary = Summary;
            this.Generated = Generated;
            this.DateCreated = DateCreated;
            
        }
        




        /// <summary>
        /// Language of the summary
        /// </summary>
        /// <value>Language of the summary</value>
        [DataMember(Name="language", EmitDefaultValue=false)]
        public string Language { get; set; }



        /// <summary>
        /// The id of the agent associated with the summary
        /// </summary>
        /// <value>The id of the agent associated with the summary</value>
        [DataMember(Name="agentId", EmitDefaultValue=false)]
        public string AgentId { get; set; }



        /// <summary>
        /// A summarization of the conversation transcription
        /// </summary>
        /// <value>A summarization of the conversation transcription</value>
        [DataMember(Name="summary", EmitDefaultValue=false)]
        public string Summary { get; set; }



        /// <summary>
        /// Indicates whether or not the summary was generated by AI
        /// </summary>
        /// <value>Indicates whether or not the summary was generated by AI</value>
        [DataMember(Name="generated", EmitDefaultValue=false)]
        public bool? Generated { get; set; }



        /// <summary>
        /// Timestamp of when the summary was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
        /// </summary>
        /// <value>Timestamp of when the summary was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z</value>
        [DataMember(Name="dateCreated", EmitDefaultValue=false)]
        public DateTime? DateCreated { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SpeechTextAnalyticsConversationSummary {\n");

            sb.Append("  SummaryType: ").Append(SummaryType).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  AgentId: ").Append(AgentId).Append("\n");
            sb.Append("  Summary: ").Append(Summary).Append("\n");
            sb.Append("  Generated: ").Append(Generated).Append("\n");
            sb.Append("  DateCreated: ").Append(DateCreated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, new JsonSerializerSettings
            {
                MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
                Formatting = Formatting.Indented
            });
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as SpeechTextAnalyticsConversationSummary);
        }

        /// <summary>
        /// Returns true if SpeechTextAnalyticsConversationSummary instances are equal
        /// </summary>
        /// <param name="other">Instance of SpeechTextAnalyticsConversationSummary to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SpeechTextAnalyticsConversationSummary other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return true &&
                (
                    this.SummaryType == other.SummaryType ||
                    this.SummaryType != null &&
                    this.SummaryType.Equals(other.SummaryType)
                ) &&
                (
                    this.Language == other.Language ||
                    this.Language != null &&
                    this.Language.Equals(other.Language)
                ) &&
                (
                    this.AgentId == other.AgentId ||
                    this.AgentId != null &&
                    this.AgentId.Equals(other.AgentId)
                ) &&
                (
                    this.Summary == other.Summary ||
                    this.Summary != null &&
                    this.Summary.Equals(other.Summary)
                ) &&
                (
                    this.Generated == other.Generated ||
                    this.Generated != null &&
                    this.Generated.Equals(other.Generated)
                ) &&
                (
                    this.DateCreated == other.DateCreated ||
                    this.DateCreated != null &&
                    this.DateCreated.Equals(other.DateCreated)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.SummaryType != null)
                    hash = hash * 59 + this.SummaryType.GetHashCode();

                if (this.Language != null)
                    hash = hash * 59 + this.Language.GetHashCode();

                if (this.AgentId != null)
                    hash = hash * 59 + this.AgentId.GetHashCode();

                if (this.Summary != null)
                    hash = hash * 59 + this.Summary.GetHashCode();

                if (this.Generated != null)
                    hash = hash * 59 + this.Generated.GetHashCode();

                if (this.DateCreated != null)
                    hash = hash * 59 + this.DateCreated.GetHashCode();

                return hash;
            }
        }
    }

}
